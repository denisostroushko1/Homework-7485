---
title: "G - Computation: Code Example"
format: 
  pdf:
    toc: false
execute: 
  echo: true
  eval: false
  warning: false
  message: false
---

# Estimating average response 

```{r}
#| echo: false 
# create log CD4 values
dataHW3 <- mutate(dataHW3,
	logCD40 = log(CD40),
	logCD41 = log(CD41),
	logCD42 = log(CD42),
	logCD43 = log(CD43),
	logCD44 = log(CD44)
	)

# get estimates of mu0 and sigma0
mu0 <- mean(dataHW3$logCD40)
sigma0 <- sd(dataHW3$logCD40)

# transform into long dataset
dataHW3_long <- melt(setDT(dataHW3), id = 1L,
	measure = patterns("^logCD4", "^CD4", "^R", "^A"),
	value.name = c("logCD4", "CD4", "R", "A"))
dataHW3_long <- data.frame(dataHW3_long)
dataHW3_long <- dataHW3_long[order(dataHW3_long$ID), ]
dataHW3_long <- 
	dataHW3_long %>%
	group_by(ID) %>%
	mutate(lag_logCD4 = lag(logCD4, n = 1, default = NA),
		lag_A = lag(A, n = 1, default = NA),
		cum_A = cumsum(A),
		lag_cum_A = lag(cum_A, n = 1, default = NA),
		lag_R = lag(R, n = 1, default = NA))

dataHW3_long <- mutate(dataHW3_long,
	time = as.numeric(variable) - 1,
	logCD4_diff = logCD4 - lag_logCD4)

# When estimating the model for change in log CD4 count and developing 
# resistance, only need data from time points 1-4 (not time point 0).

dataHW3_long_t0 <- filter(dataHW3_long, time > 0)

# Estimate parameters in the model for change in CD4

m1 <- lm(logCD4 ~ lag_logCD4 + lag_A + R +
		lag_logCD4*lag_A + lag_logCD4*R + 
		lag_A*R + lag_logCD4*lag_A*R, data = dataHW3_long_t0)

round(summary(m1)$coefficients, digits = 2)

dataHW3_long_resist_model <- filter(dataHW3_long_t0, lag_R == 0 & lag_cum_A > 0)

m2 <- glm(R ~ lag_cum_A, family = "binomial", 
	data = dataHW3_long_resist_model)
round(summary(m2)$coefficients, digits = 2)

coef_estimates <- c(mu0, sigma0, coef(m1), summary(m1)$sigma, coef(m2))
coef_names <- c("mu0", "sigma0", paste0("beta", 0:7), "sigma", 
	paste0("gamma", 0:1))
coef_estimates <- data.frame(Estimates = coef_estimates)
rownames(coef_estimates) <- coef_names

```

```{r}

mean_response <- function(treat_sequence, coef_estimates, MC) {
	mu0 <- coef_estimates[1]; sigma0 <- coef_estimates[2]
	beta0 <- coef_estimates[3]; beta1 <- coef_estimates[4]; beta2 <- coef_estimates[5]; 
	beta3 <- coef_estimates[6]; beta4 <- coef_estimates[7];
	beta5 <- coef_estimates[8]; beta6 <- coef_estimates[9];
	beta7 <- coef_estimates[10]; 
	
	sigma <- coef_estimates[11];gamma0 <- coef_estimates[12];gamma1 <- coef_estimates[13]
	
	#### Time Period 0 
		R0 <- rep(0, MC)
		logCD40 <- rnorm(MC, mu0, sigma0)
		A0 <- rep(treat_sequence[1], MC)
		cumA0 <- A0
		
	### Time Period 1 
		R1 <- rbinom(MC, 1, expit(gamma0 + gamma1*cumA0)
		             ) * (cumA0 > 0 & R0 == 0) + 0*(cumA0 == 0) + 1*(R0 == 1) 
		
		logCD41 <- 
		  beta0 + beta1*logCD40 + beta2*A0 + beta3*R1 + 
			beta4*logCD40*A0 + beta5*logCD40*R1 + beta6*A0*R1 + beta7*logCD40*A0*R1 + 
			rnorm(MC, 0, sigma)
		
		A1 <- rep(treat_sequence[2], MC)
		cumA1 <- A0 + A1
		
	### Time Period 2 
		R2 <- rbinom(MC, 1, expit(gamma0 + gamma1*cumA1)
		             )*(cumA1 > 0 & R1 == 0) + 0*(cumA1 == 0) + 1*(R1 == 1) 
		
		logCD42 <-  
		  beta0 + beta1*logCD41 + beta2*A1 + beta3*R2 + 
			beta4*logCD41*A1 + beta5*logCD41*R2 + beta6*A1*R2 + beta7*logCD41*A1*R2 + 
			rnorm(MC, 0, sigma)
		
		A2 <- rep(treat_sequence[3], MC)
		cumA2 <- A0 + A1 + A2
		
	### Time Period 3 
		R3 <- rbinom(MC, 1, expit(gamma0 + gamma1*cumA2)
		             )*(cumA2 > 0 & R2 == 0) + 0*(cumA2 == 0) + 1*(R2 == 1) 
		
		logCD43 <- 
		  beta0 + beta1*logCD42 + beta2*A2 + beta3*R3 + 
			beta4*logCD42*A2 + beta5*logCD42*R3 + beta6*A2*R3 + beta7*logCD42*A2*R3 + 
			rnorm(MC, 0, sigma)
		
		A3 <- rep(treat_sequence[4], MC)
		cumA3 <- A0 + A1 + A2 + A3
		
	### Time Period 4 
		R4 <- rbinom(MC, 1, expit(gamma0 + gamma1*cumA3)
		             )*(cumA3 > 0 & R3 == 0) + 0*(cumA3 == 0) + 1*(R3 == 1) 
		
		logCD44 <-  
		  beta0 + beta1*logCD43 + beta2*A3 + beta3*R4 + 
			beta4*logCD43*A3 + beta5*logCD43*R4 + beta6*A3*R4 + beta7*logCD43*A3*R4 + 
			rnorm(MC, 0, sigma)
		
	mean_response <- c(mean(logCD44), mean(exp(logCD44)))
	names(mean_response) <- c("mean_logCD4", "mean_CD4")
	return(mean_response)
}

trt_sequences <- list(
	c(0, 0, 0, 0),
	c(0, 0, 0, 1),
	c(0, 0, 1, 1),
	c(0, 1, 1, 1),
	c(1, 1, 1, 1),
	c(1, 1, 1, 0),
	c(1, 1, 0, 0),
	c(1, 0, 0, 0)
)

set.seed(8172013)
mean_trt_response <- 
  sapply(trt_sequences, 
         mean_response, 
         coef_estimates = as.vector(coef_estimates[, 1]), MC = 100000)	

mean_trt_response <- t(mean_trt_response)

rownames(mean_trt_response) <- 
  c("(0, 0, 0, 0)",
	  "(0, 0, 0, 1)",
	  "(0, 0, 1, 1)",
	  "(0, 1, 1, 1)",
	  "(1, 1, 1, 1)",
	  "(1, 1, 1, 0)",
	  "(1, 1, 0, 0)",
	  "(1, 0, 0, 0)")
#print(mean_trt_response, digits = 3)
```

\newpage 

## Bootstrap to Estimate SE

```{r}

dataHW3_orig <- dataHW3

n <- nrow(dataHW3_orig)

boot <- 50

mean_trt_response_boot <- array(0, dim = c(8, 2, boot))

for(j in 1:boot) {
	dataHW3 <- dataHW3_orig[sample(1:n, n, replace = TRUE), ]
	
	# get estimates of mu0 and sigma0
	
	mu0 <- mean(dataHW3$logCD40) 
	
	sigma0 <- sd(dataHW3$logCD40)

	dataHW3$ID <- 1:n
	
	dataHW3_long <- 
	  melt(setDT(dataHW3), 
	       id = 1L,
          measure = patterns("^logCD4", "^CD4", "^R", "^A"),
          value.name = c("logCD4", "CD4", "R", "A")
	       )
	
	dataHW3_long <- data.frame(dataHW3_long)
	
	dataHW3_long <- dataHW3_long[order(dataHW3_long$ID), ]
	
	dataHW3_long <- 
		dataHW3_long %>%
		group_by(ID) %>%
		mutate(
		  lag_logCD4 = lag(logCD4, n = 1, default = NA),
			lag_A = lag(A, n = 1, default = NA),
			cum_A = cumsum(A),
			lag_cum_A = lag(cum_A, n = 1, default = NA),
			lag_R = lag(R, n = 1, default = NA)
			)
	
	dataHW3_long <- 
	  mutate(
	    dataHW3_long,
      time = as.numeric(variable) - 1,
      logCD4_diff = logCD4 - lag_logCD4)
	
	dataHW3_long_t0 <- filter(dataHW3_long, time > 0)
	
	m1 <- lm(logCD4 ~ lag_logCD4 + lag_A + R +
		lag_logCD4*lag_A + lag_logCD4*R + 
		lag_A*R + lag_logCD4*lag_A*R, data = dataHW3_long_t0)
	
	dataHW3_long_resist_model <- filter(dataHW3_long_t0, lag_R == 0 & lag_cum_A > 0)
	
	m2 <- glm(R ~ lag_cum_A, family = "binomial", 
		data = dataHW3_long_resist_model)
	
	coef_estimates <- c(mu0, sigma0, coef(m1), summary(m1)$sigma, coef(m2))
	
	mean_trt_response <- 
	  sapply(trt_sequences, 
	         mean_response, 
           coef_estimates = coef_estimates, 
	         MC = 100000)	
	
	mean_trt_response <- t(mean_trt_response)
	
	mean_trt_response_boot[, , j] <- mean_trt_response 
}

se <- apply(mean_trt_response_boot, c(1, 2), sd)
rownames(se) <- c("(0, 0, 0, 0)",
	"(0, 0, 0, 1)",
	"(0, 0, 1, 1)",
	"(0, 1, 1, 1)",
	"(1, 1, 1, 1)",
	"(1, 1, 1, 0)",
	"(1, 1, 0, 0)",
	"(1, 0, 0, 0)")
colnames(se) <- c("SE_logCD4", "SE_CD4")
print(se, digits = 2)
```
